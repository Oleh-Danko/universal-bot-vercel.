import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiohttp import web 

# üîë –¢–æ–∫–µ–Ω –±–µ—Ä–µ—Ç—å—Å—è –∑—ñ –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è Render (—Ü–µ –±–µ–∑–ø–µ—á–Ω–æ)
TOKEN = os.environ.get("TOKEN") 

if not TOKEN:
    print("–ü–æ–º–∏–ª–∫–∞: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è TOKEN. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ Render settings.")
    exit(1)

# –†–µ–∂–∏–º —Ä–æ–∑–±–æ—Ä—É Markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
bot = Bot(token=TOKEN, parse_mode='Markdown')
dp = Dispatcher()

# --- –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç, –∑–∞–ø—É—â–µ–Ω–∏–π –Ω–∞ Render. –Ø –Ω–µ —Å–ø–ª—é, –±–æ –º–∞—é –≤–µ–±-—Å–µ—Ä–≤–µ—Ä!\n"
        "–ù–∞–¥—ñ—à–ª—ñ—Ç—å /news, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ –ø—Ä–∞—Ü—é—î –æ—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞."
    )

@dp.message(Command("news"))
async def news_command(message: types.Message):
    # –¢—É—Ç –±—É–¥–µ Playwright-–ø–∞—Ä—Å–µ—Ä, –∞–ª–µ –ø–æ–∫–∏ —â–æ —Ü–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    await message.answer(
        "‚è≥ –ë–æ—Ç –ø—Ä–∞—Ü—é—î –Ω–∞ Render!\n"
        "–ü–∞—Ä—Å–∏–Ω–≥ —â–µ –Ω–µ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–æ, –∞–ª–µ –±–æ—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —ñ –ø—Ä–∞—Ü—é—î 24/7."
    )

# --- Web Server –¥–ª—è Render (—â–æ–± –Ω–µ –∑–∞—Å–∏–Ω–∞–≤) ---

async def handle_ping(request):
    """–ü—Ä–æ—Å—Ç–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—ñ–Ω–≥-–∑–∞–ø–∏—Ç—ñ–≤ Render"""
    return web.Response(text="I'm alive and ready to work!")

async def start_web_server():
    """–ó–∞–ø—É—Å–∫–∞—î –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É, —è–∫–∏–π –æ—á—ñ–∫—É—î Render (PORT)"""
    # Render –ø–µ—Ä–µ–¥–∞—î –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è PORT
    port = int(os.environ.get("PORT", 8080)) 
    app = web.Application()
    app.router.add_get('/', handle_ping)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()
    print(f"‚úÖ Web server started on port {port}")

# --- –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É ---

async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —ñ —á–µ–∫–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
    await asyncio.gather(
        dp.start_polling(bot),
        start_web_server() # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    )

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–æ–ª–æ–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
    asyncio.run(main())
