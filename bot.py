import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from playwright.sync_api import sync_playwright
import logging
from typing import List

logging.basicConfig(level=logging.INFO)

# üîë –¢–≤—ñ–π —Ç–æ–∫–µ–Ω
TOKEN = "8392167879:AAG9GgPCXrajvdZca5vJcYopk3HO5w2hBhE"

bot = Bot(token=TOKEN)
dp = Dispatcher()

# üåç –Ü–ù–û–ó–ï–ú–ù–Ü –î–ñ–ï–†–ï–õ–ê (–û–ß–ò–©–ï–ù–ò–ô –°–ü–ò–°–û–ö: –≤–∏–¥–∞–ª–µ–Ω–æ Bloomberg, —è–∫–∏–π –±–ª–æ–∫—É—î)
FOREIGN_FEEDS = [
    "https://www.reuters.com/business/",
    "https://www.nytimes.com/international/section/business",
    "https://www.cnbc.com/markets/",
    "https://techcrunch.com/",
    # –î–æ–¥–∞—î–º–æ –±—ñ–ª—å—à —Å—Ç—ñ–π–∫—ñ –∑–∞–≥–∞–ª—å–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞
    "https://www.bbc.com/business",
    "https://edition.cnn.com/business",
]

# üá∫üá¶ –£–ö–†–ê–á–ù–°–¨–ö–Ü –î–ñ–ï–†–ï–õ–ê (–ë–µ–∑ –∑–º—ñ–Ω, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –Ω–µ –±–ª–æ–∫—É—é—Ç—å)
UKRAINIAN_FEEDS = [
    "https://forbes.ua/",
    "https://www.liga.net/ua",
    "https://epravda.com.ua/",
    "https://delo.ua/",
    "https://mind.ua/",
    "https://ain.ua/",
    "https://thepage.ua/news",
]

def get_news_sync(sites: List[str]) -> List[str]:
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–∞—Ä—Å–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–æ–≤–∏–Ω –∑ –≤–µ–±—Å–∞–π—Ç—ñ–≤ (Playwright)."""
    results = []
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True) 
        page = browser.new_page()

        for site in sites:
            try:
                page.goto(site, timeout=30000) # –¢–∞–π–º–∞—É—Ç 30 —Å–µ–∫—É–Ω–¥
                page.wait_for_timeout(2000) 
                
                # –ú–∏ —à—É–∫–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ h2, h3. –Ø–∫—â–æ –Ω–∞ —Å–∞–π—Ç—ñ —ó—Ö –Ω–µ–º–∞—î, –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫.
                titles = page.locator("h2, h3").all_text_contents()
                clean = [t.strip() for t in titles if 25 < len(t.strip()) < 120]
                
                if clean:
                    results.append(f"üåê *{site}*")
                    for t in clean[:3]:
                        # –î–æ–¥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç, —è–∫ —Ç–∏ –ø—Ä–æ—Å–∏–≤
                        results.append(f"‚Ä¢ [{t}]({site})") 
                        
                    results.append("") 
            except Exception as e:
                # –¶–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∏ –ø–æ–±–∞—á–∏—à —É –ª–æ–≥–∞—Ö –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥—É, —è–∫—â–æ —Å–∞–π—Ç –∑–∞–±–ª–æ–∫—É—î IP —Ö–æ—Å—Ç–∏–Ω–≥—É
                logging.warning(f"‚ö†Ô∏è –ë–ª–æ–∫ –∞–±–æ –ø–æ–º–∏–ª–∫–∞ –Ω–∞ {site}: {e}")
                
        browser.close()
    return results

@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –±–æ—Ç (–Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥—É Render).\n\n"
        "üóû –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –∫–æ–º–∞–Ω–¥–∏:\n"
        "`/news` ‚Äî –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω—ñ –Ω–æ–≤–∏–Ω–∏ üåç (–ø–æ–≤—ñ–ª—å–Ω–æ)\n"
        "`/newsua` ‚Äî —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –Ω–æ–≤–∏–Ω–∏ üá∫üá¶ (–ø–æ–≤—ñ–ª—å–Ω–æ)",
        parse_mode="Markdown"
    )

@dp.message(Command("news"))
async def send_foreign_news(message: types.Message):
    sent = await message.answer("‚è≥ –ó–±–∏—Ä–∞—é –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω—ñ –Ω–æ–≤–∏–Ω–∏... –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π.")
    news = await asyncio.to_thread(get_news_sync, FOREIGN_FEEDS) 
    
    if news:
        full_text = "\n".join(news)
        await sent.edit_text(full_text[:4096], parse_mode="Markdown", disable_web_page_preview=True)
    else:
        await sent.edit_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏ üòî (–ú–æ–∂–ª–∏–≤–æ, —Å–∞–π—Ç–∏ –±–ª–æ–∫—É—é—Ç—å IP —Ö–æ—Å—Ç–∏–Ω–≥—É).")


@dp.message(Command("newsua"))
async def send_ukrainian_news(message: types.Message):
    sent = await message.answer("‚è≥ –ó–±–∏—Ä–∞—é —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –Ω–æ–≤–∏–Ω–∏... –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π.")
    news = await asyncio.to_thread(get_news_sync, UKRAINIAN_FEEDS)
    
    if news:
        full_text = "\n".join(news)
        await sent.edit_text(full_text[:4096], parse_mode="Markdown", disable_web_page_preview=True)
    else:
        await sent.edit_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏ üòî (–ú–æ–∂–ª–∏–≤–æ, —Å–∞–π—Ç–∏ –±–ª–æ–∫—É—é—Ç—å IP —Ö–æ—Å—Ç–∏–Ω–≥—É).")


async def main():
    print("‚úÖ –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π Playwright-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —ñ —á–µ–∫–∞—î –∫–æ–º–∞–Ω–¥...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.")